#!/bin/bash

# Usage: claude-tmux [--new] [session-name] [working-dir]
# If no args provided, uses current directory
# --new: force creation of a new session (append number if name exists)

FORCE_NEW=false

# Parse --new flag
if [[ "$1" == "--new" ]]; then
    FORCE_NEW=true
    shift
fi

SESSION_NAME="${1:-$(basename "$(pwd)")}"
WORKING_DIR="${2:-$(pwd)}"

# Sanitize session name for tmux (replace dots and other special chars with dashes)
SESSION_NAME=$(echo "$SESSION_NAME" | sed 's/[^a-zA-Z0-9_-]/-/g' | sed 's/^-//')

if [[ "$FORCE_NEW" == true ]]; then
    # Find an available session name by appending numbers
    FINAL_SESSION_NAME="$SESSION_NAME"
    COUNTER=1
    while tmux has-session -t "$FINAL_SESSION_NAME" 2>/dev/null; do
        FINAL_SESSION_NAME="${SESSION_NAME}-${COUNTER}"
        ((COUNTER++))
    done
    SESSION_NAME="$FINAL_SESSION_NAME"

    # Create new session with claude and attach
    tmux new-session -d -s "$SESSION_NAME" -c "$WORKING_DIR" "$SHELL -lic 'claude --dangerously-skip-permissions'"
    tmux attach-session -t "$SESSION_NAME"
else
    # Check if tmux session exists
    if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
        # Attach to existing session
        tmux attach-session -t "$SESSION_NAME"
    else
        # Create new session with claude and attach
        # Use interactive login shell to load mise/asdf and other environment variables
        tmux new-session -d -s "$SESSION_NAME" -c "$WORKING_DIR" "$SHELL -lic 'claude --dangerously-skip-permissions'"
        tmux attach-session -t "$SESSION_NAME"
    fi
fi