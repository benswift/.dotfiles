#!/usr/bin/env bash
#
# Mail sync script for neomutt + mbsync + mu
# Syncs all email accounts and updates mu index
#
set -euo pipefail

# Colours for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Track if we need to update mu on exit
needs_mu_update=false

# Function to print status messages
print_status() {
    echo -e "${GREEN}[$(date '+%H:%M:%S')]${NC} $1"
}

print_error() {
    echo -e "${RED}[$(date '+%H:%M:%S')] ERROR:${NC} $1" >&2
}

print_warning() {
    echo -e "${YELLOW}[$(date '+%H:%M:%S')] WARNING:${NC} $1"
}

# Cleanup function to run on exit
cleanup() {
    local exit_code=$?
    if [ "$needs_mu_update" = true ]; then
        echo ""
        print_warning "Script interrupted - updating mu database to maintain consistency..."
        mu index --quiet
        print_status "mu database updated"
    fi
    exit $exit_code
}

# Set up trap for cleanup on interrupt/exit
trap cleanup EXIT INT TERM

# Check dependencies
for cmd in mbsync mu; do
    if ! command -v "$cmd" &> /dev/null; then
        print_error "$cmd is not installed"
        exit 1
    fi
done

# Track if any sync had errors
sync_errors=0

# Initialize mu if needed
if [ ! -d ~/.cache/mu ]; then
    print_status "Initializing mu database..."
    mu init --maildir=~/Maildir \
        --my-address=u2548636@anu.edu.au \
        --my-address=ben.swift@anu.edu.au \
        --my-address=benswift@fastmail.com \
        --my-address=ben@benswift.me
    needs_mu_update=true
fi

# Sync accounts
for account in personal anu; do
    print_status "Syncing ${account^} account..."
    if output=$(mbsync "$account" 2>&1); then
        print_status "${account^} account synced successfully"
        needs_mu_update=true
    else
        print_warning "${account^} account sync had issues"
        sync_errors=$((sync_errors + 1))
        needs_mu_update=true
        # Only show output if there was an error
        echo "$output" | sed 's/^/  /'
    fi
done

# Update mu database
if [ "$needs_mu_update" = true ]; then
    print_status "Updating mu index..."
    if mu index --quiet 2>&1; then
        print_status "mu index updated"
    fi
    needs_mu_update=false
fi

# Summary
echo ""
if [ $sync_errors -eq 0 ]; then
    print_status "Mail sync completed successfully!"
else
    print_warning "Mail sync completed with $sync_errors account(s) having issues"
fi

# Show new message count
unread_count=$(mu find flag:unread 2>/dev/null | wc -l | tr -d ' ')
today_count=$(mu find date:today 2>/dev/null | wc -l | tr -d ' ')

if [ "$today_count" -gt 0 ]; then
    print_status "You have $today_count message(s) from today"
fi
if [ "$unread_count" -gt 0 ]; then
    print_status "Total unread: $unread_count message(s)"
fi