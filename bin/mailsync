#!/usr/bin/env bash
#
# Mail sync script for neomutt + mbsync + mu
# Syncs all email accounts and updates mu index
#
set -euo pipefail

# Colours for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print status messages
print_status() {
    echo -e "${GREEN}[$(date '+%H:%M:%S')]${NC} $1"
}

print_error() {
    echo -e "${RED}[$(date '+%H:%M:%S')] ERROR:${NC} $1" >&2
}

print_warning() {
    echo -e "${YELLOW}[$(date '+%H:%M:%S')] WARNING:${NC} $1"
}

# Check dependencies
for cmd in mbsync mu; do
    if ! command -v "$cmd" &> /dev/null; then
        print_error "$cmd is not installed"
        exit 1
    fi
done

# Track if any sync had errors
sync_errors=0

# Initialize mu if needed
if [ ! -d ~/.cache/mu ]; then
    print_status "Initializing mu database..."
    mu init --maildir=~/Maildir \
        --personal-address=u2548636@anu.edu.au \
        --personal-address=ben.swift@anu.edu.au \
        --personal-address=benswift@fastmail.com \
        --personal-address=ben@benswift.me
fi

# Sync all accounts
print_status "Syncing all mail accounts..."
if mbsync -a; then
    print_status "All accounts synced successfully"
else
    print_warning "Mail sync had issues"
    sync_errors=$((sync_errors + 1))
fi

# Update mu index
print_status "Updating search index..."
mu index

# Summary
echo ""
if [ $sync_errors -eq 0 ]; then
    print_status "Mail sync completed successfully!"
else
    print_warning "Mail sync completed with $sync_errors account(s) having issues"
fi
