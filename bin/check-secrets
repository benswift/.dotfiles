#!/bin/bash

# Show help message
if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    echo "Usage: check-secrets [-v|--verbose] [-h|--help]"
    echo ""
    echo "Run 2ms security scan to check for secrets and sensitive data in a git repository."
    echo ""
    echo "Options:"
    echo "  -v, --verbose   Show detailed output"
    echo "  -h, --help      Show this help message"
    echo ""
    echo "Must be run from within a git repository."
    exit 0
fi

# Parse command line arguments
VERBOSE=false
if [[ "$1" == "-v" ]] || [[ "$1" == "--verbose" ]]; then
    VERBOSE=true
fi

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "Error: Not in a git repository. This script must be run from within a git repo."
    exit 1
fi

# Get the repository root
repo_root=$(git rev-parse --show-toplevel)

# Ensure required tooling is available
if ! command -v 2ms >/dev/null 2>&1; then
    echo "Error: 2ms CLI not found on PATH."
    echo "Install 2ms or update the script to use an available scanner."
    exit 1
fi

echo "Running 2ms security scan on: $repo_root"
echo "Checking for secrets and sensitive data..."
echo

# Set log level based on verbose flag
if [ "$VERBOSE" = true ]; then
    LOG_LEVEL="info"
else
    LOG_LEVEL="warn"
fi

# Run 2ms filesystem scan
2ms filesystem \
    --log-level "$LOG_LEVEL" \
    --path "$repo_root"

# Capture exit code
exit_code=$?

if [ $exit_code -eq 0 ]; then
    echo
    echo "✓ No secrets detected"
else
    echo
    echo "⚠ Secrets or sensitive data may have been detected"
    echo "Please review the findings above and take appropriate action"
fi

exit $exit_code
