#!/usr/bin/env bash
###############################################################################
# ios-import.nb-plugin
#
# Import txt files from iCloud nb-inbox directory into nb
#
# Add this file to your `nb` notebook or to the plugins directory to enable
# the `nb ios-import` subcommand.
#
# Installation:
#   nb plugins install /path/to/ios-import.nb-plugin
# -or-
#   cp ios-import.nb-plugin ~/.nb/.plugins/
###############################################################################

_subcommands add "ios-import"

_ios-import() {
  local _inbox_dir="/Users/ben/Library/Mobile Documents/com~apple~CloudDocs/nb-inbox"
  local _notes_dir="${_inbox_dir}/notes"
  local _bookmarks_file="${_inbox_dir}/bookmarks.txt"
  local _imported_count=0
  local _notebook="${1:-}"
  
  # Use current notebook if none specified
  if [[ -z "${_notebook}" ]]; then
    _notebook="$(_notebooks current)"
  fi
  
  # Check if inbox directories exist
  if [[ ! -d "${_inbox_dir}" ]]; then
    printf "Error: Cannot access inbox directory: %s\\n" "${_inbox_dir}"
    printf "\\nThis may be a permissions issue. To fix:\\n"
    printf "1. Open System Settings > Privacy & Security > Full Disk Access\\n"
    printf "2. Add your terminal application (Terminal.app, iTerm2, etc.)\\n"
    printf "3. Restart your terminal and try again\\n"
    _exit_1 printf "\\nAlternatively, check if the path exists or if iCloud Drive is synced.\\n"
  fi
  
  printf "Importing from iCloud nb-inbox into notebook: %s\\n" "${_notebook}"
  
  # Process notes directory
  if [[ -d "${_notes_dir}" ]]; then
    printf "\\nProcessing notes...\\n"
    # Use find to handle spaces in filenames properly
    while IFS= read -r -d '' _file; do
        local _basename
        _basename="$(basename "${_file}")"
        
        # Check if file is empty
        if [[ ! -s "${_file}" ]]; then
          printf "  Warning: Empty file deleted: %s\\n" "${_basename}"
          rm "${_file}"
          continue
        fi
        
        # Parse timestamp from filename (format: note-2025-08-29T09:38:51+10:00.txt)
        local _timestamp=""
        if [[ "${_basename}" =~ note-([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2})\.txt ]]; then
          _timestamp="${BASH_REMATCH[1]}"
          printf "  Importing note from %s\\n" "${_timestamp}"
        else
          printf "  Importing: %s\\n" "${_basename}"
        fi
        
        # Read the file content to extract title from first line
        local _content
        _content="$(cat "${_file}")"
        local _title
        _title="$(echo "${_content}" | head -1)"
        
        # Create temporary markdown file with content
        local _temp_md="${_file%.txt}.md"
        echo "${_content}" > "${_temp_md}"
        
        # Import the markdown file with title and inbox tag
        if nb import "${_temp_md}" "${_notebook}:" --title "${_title}" --tags "inbox"; then
          # Remove both the original and temp files after successful import
          rm "${_file}"
          rm "${_temp_md}"
          ((_imported_count++))
        else
          printf "    Warning: Failed to import %s\\n" "${_basename}"
          rm "${_temp_md}" 2>/dev/null
        fi
    done < <(find "${_notes_dir}" -name "*.txt" -type f -print0)
  fi
  
  # Process bookmarks file (single file with one URL per line)
  if [[ -f "${_bookmarks_file}" ]]; then
    printf "\\nProcessing bookmarks...\\n"
    
    # Check if file is empty
    if [[ ! -s "${_bookmarks_file}" ]]; then
      printf "  Warning: Empty bookmarks file, skipping\\n"
    else
      local _bookmark_count=0
      
      # Process each line directly
      while IFS= read -r _url; do
        # Skip empty lines
        if [[ -z "${_url}" ]]; then
          continue
        fi
        
        printf "  Adding bookmark: %s\\n" "${_url}"
        
        # Run nb command with generous timeout for fetching URL content
        timeout 30 nb "${_url}" --tags "inbox"
        local _result=$?
        
        if [[ ${_result} -eq 0 ]]; then
          # Success
          ((_imported_count++))
          ((_bookmark_count++))
        else
          printf "    Warning: Failed to add bookmark\\n"
        fi
      done < "${_bookmarks_file}"
      
      # Always clear the bookmarks file after processing
      > "${_bookmarks_file}"
      printf "\\nProcessed %d bookmarks, bookmarks.txt cleared\\n" "${_bookmark_count}"
    fi
  fi
  
  if [[ ${_imported_count} -eq 0 ]]; then
    printf "\\nNo txt files found to import.\\n"
  else
    printf "\\nSuccessfully imported %d file(s).\\n" ${_imported_count}
  fi
}

_subcommands describe "ios-import" <<HEREDOC
Usage:
  nb ios-import [<notebook>]

Description:
  Import notes and bookmarks from the iCloud nb-inbox directory into nb.
  
  Files are imported from:
    - Notes: /Users/ben/Library/Mobile Documents/com~apple~CloudDocs/nb-inbox/notes/*.txt
      (Timestamp parsed from filename format: note-YYYY-MM-DDTHH:MM:SS+TZ:TZ.txt)
    - Bookmarks: /Users/ben/Library/Mobile Documents/com~apple~CloudDocs/nb-inbox/bookmarks.txt
      (Each line is processed as a separate bookmark URL)
  
  After successful import, the original files are removed from the inbox.
  
  If no notebook is specified, imports into the current notebook.

Examples:
  nb ios-import
  nb ios-import personal
  nb ios-import work:

HEREDOC